package runner;

import software.amazon.awssdk.services.sqs.SqsClient;
import software.amazon.awssdk.services.sns.SnsClient;
import software.amazon.awssdk.services.sns.model.PublishRequest;
import software.amazon.awssdk.services.sns.model.PublishResponse;
import software.amazon.awssdk.services.sns.model.SnsException;
import software.amazon.awssdk.services.sqs.model.SqsException;
import software.amazon.awssdk.services.sqs.model.SendMessageRequest;

public class Sender {
	private SnsClient snsClient;
	private SqsClient sqsClient;
	private String sqsExit;
	private String snsExit;
	public Sender(SnsClient snsClient, SqsClient sqsClient, String sqsExit, String snsExit) {
		this.snsExit = snsExit;
		this.snsClient = snsClient;
		this.sqsClient = sqsClient;
		this.sqsExit = sqsExit;
	}
	
	public void send(CSVProcessor proc, String bucketName, String oldFile, String newFile) {
		String message = "{\"bucketName\": \"" +
				bucketName + "\", \"oldFile\": \"" +
				oldFile + "\", \"newFile\": \"" +
				newFile + "\"}";
		System.out.println("Message generated by sender: \n" + message);
		try {
        sqsClient.sendMessage(SendMessageRequest.builder()
                .queueUrl(this.sqsExit)
                .messageBody(message)
                .build());
		} catch (SqsException e) {
			System.err.println("Could not send message to SQS Exit queue: " + e.getMessage());
			System.exit(1);
		}
		
        try {
            PublishRequest request = PublishRequest.builder()
                .message("New file available !")
                .topicArn(this.snsExit)
                .build();

            PublishResponse result = snsClient.publish(request);
            System.out.println(result.messageId() + " Message sent. Status is " + result.sdkHttpResponse().statusCode());

         } catch (SnsException e) {
            System.err.println("Could not send notification to SNS Exit topic : " + e.awsErrorDetails().errorMessage());
            System.exit(1);
         }
	}
}
